knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ggrepel)
library(data.table)
library("DT")
library(gridExtra)
library(scales)
##Create All Facet for plotting
CreateAllFacet <- function(df, col){
df$facet <- df[[col]]
temp <- df
temp$facet <- "All"
merged <-rbind(temp, df)
# ensure the facet value is a factor
merged[[col]] <- as.factor(merged[[col]])
return(merged)
}
# labels for time points
timeLab  = c("Baseline", "Post Run-in", "Week 8")
# set colors
recistCol = c("Non-responder" = "red","Responder" = "blue")
cbrCol = c("CR,PR,SD" = "blue","PD" = "red")
subtypeCol = c("HR+" = "red", "TNBC" = "blue")
timeCol = setNames(c("black", 'grey45', 'grey75'), timeLab)
# set root folder
rootDir = "./"
# Load data patient data
dta_pts = read.csv(paste0(rootDir,"input_tables/table_patient_info.csv"), row.names = 1)
dta_pts$ID = rownames(dta_pts)
#==========================
# file with TILs and PDL1 data
cytof_dat = read.csv(paste0(rootDir,"input_tables/table_cytof_marker_expression.csv"))
#markers = c("CD40", "CD103", "CCR5", "CD141")
markers = colnames(cytof_dat)[4:ncol(cytof_dat)]
#===========================
# add patient info
cytof_dat = cbind(cytof_dat,  dta_pts[cytof_dat$patientID,])
# take only baseline and time 1 values
df_BvT1 <- cytof_dat %>% filter(timePoint %in% c('Baseline','Post Run-in'))
# take only time 1 and time 2 values
df_T1vT2 <- cytof_dat %>% filter(timePoint %in% c('Week 8','Post Run-in'))
res = c()
# split by clusters
cytof_dat_byClust = split(cytof_dat, f = factor(cytof_dat$cluster))
for(j in names(cytof_dat_byClust))
{
#
d = cytof_dat_byClust[[j]]
for (k in markers)
{
# create per patient matrix with three time points in columns
# some values would be NA
mat <- data.frame(matrix(nrow = length(unique(d$patientID)),
ncol = 3, dimnames = list(unique(d$patientID),
levels(factor(d$timePoint)))), check.names = F)
# fill in matrix
for(i in levels(factor(d$timePoint)))
{
d1 = d %>% filter(timePoint == i)
mat[d1$patientID, i] = d1[,k]
}
# add response
mat$RECIST = cytof_dat[rownames(mat),"RECIST"]
# create treatment effect
# substract baseline from post run-in and week 8
mat$delta_T1_B =  mat[,2]-mat[,1]
mat$delta_T2_B =  mat[,3]-mat[,1]
# and week 8 from post run-in
mat$delta_T2_T1 =  mat[,3]-mat[,2]
# running paired test
# Baseline vs post run-in
p1 = wilcox.test(mat[,1], mat[,2], paired = T)$p.value
# post run-in vs week 8
p2 = wilcox.test(mat[,2], mat[,3], paired = T)$p.value
# test by response
# for baseline
p3 = wilcox.test(Baseline ~ RECIST, data = mat)$p.value
# for post run-in
p4 = wilcox.test(mat[,2] ~ mat[,"RECIST"], data = mat)$p.value
# for week 8
p5 = wilcox.test(mat[,3] ~ mat[,"RECIST"], data = mat)$p.value
# compare differences in treatment effect in responders vs non-responders
p6 = wilcox.test(delta_T1_B ~ RECIST, data = mat)$p.value
p7 = wilcox.test(delta_T2_B ~ RECIST, data = mat)$p.value
p8 = wilcox.test(delta_T2_T1 ~ RECIST, data = mat)$p.value
# combine all p-values and add means
res = rbind(res, c(marker = k, cluster = j, BvsT1 = round(p1,3),
T1vsT2 = round(p2,3), B_RvsNR = round(p3,3),
T1_RvsNR = round(p4,3), T2_RvsNR = round(p5,3),
d_T1_B_RvsNR = round(p6,3),
d_T2_B_RvsNR = round(p7,3),
d_T2_T1_RvsNR = round(p8,3),
mean_d_T1_B_R = round(mean(mat %>% filter(RECIST == "Responder") %>% select(delta_T1_B) %>% unlist(), na.rm = T),3),
mean_d_T1_B_NR = round(mean(mat %>% filter(RECIST == "Non-responder") %>% select(delta_T1_B) %>% unlist(), na.rm = T),3),
mean_d_T2_B_R = round(mean(mat %>% filter(RECIST == "Responder") %>% select(delta_T2_B) %>% unlist(), na.rm = T),3),
mean_d_T2_B_NR = round(mean(mat %>% filter(RECIST == "Non-responder") %>% select(delta_T2_B) %>% unlist(), na.rm = T),3),
mean_d_T2_T1_R = round(mean(mat %>% filter(RECIST == "Responder") %>% select(delta_T2_T1) %>% unlist(), na.rm = T),3),
mean_d_T2_T1_NR = round(mean(mat %>% filter(RECIST == "Non-responder") %>% select(delta_T2_T1) %>% unlist(), na.rm = T),3)))
}
}
res = res[order(res[,'marker']),]
datatable(res)
# make boxplots for markers/clusters that have p-value < 0.05 in d_T1_B_RvsNR
sets = data.frame(res)
sets = sets %>% filter(d_T1_B_RvsNR < 0.05 & cluster%in% c('B','CD4_T','CD8_T','DNT','DPT','NK_like',"cDC1"))
sets
k = "cDC1"
j = "CD103"
d = cytof_dat %>% filter(cluster == k)
d = CreateAllFacet(d,"RECIST")
df = cbind(protein = d[,j],
d[,c("patientID", "timePoint", "RECIST","Subtype", "facet") ] )
p = ggpaired(df , x="timePoint",y="protein", id = "patientID",
line.size = 0.4, title = paste0(j,". ", k),
line.color = "RECIST",palette =  recistCol, xlab="Time") +
facet_wrap("facet") +
scale_x_discrete(labels=timeLab)
print(p)
